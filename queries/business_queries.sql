    --1. Retrieve the customers who have placed orders with a total amount greater than $10000.

SELECT t.CustomerKey,
       CONCAT(Firstname, ' ', LastName) AS Fullname,
       SUM (p.productprice * t.orderquantity) AS Total_Amount
FROM total_orders t
JOIN [ Product Lookup] p ON t.productkey = p.ProductKey
JOIN [Customer Lookup] c ON t.CustomerKey =c.CustomerKey
GROUP BY t.CustomerKey,
         CONCAT(Firstname, ' ', LastName)
HAVING SUM (p.productprice * t.orderquantity) > 10000;

    --2. Retrieve the total revenue and total orders generated by each product category

SELECT pc.ProductCategoryKey,
       pc.CategoryName,
       SUM (p.productprice * t.orderquantity) AS Total_Revenue,
           COUNT (DISTINCT t.OrderNumber) AS Total_Orders
FROM [Product Subcategories Lookup] PSC
JOIN [Product Categories Lookup] PC ON PSC.ProductCategoryKey = PC.ProductCategoryKey
JOIN [ Product Lookup] p ON PSC.ProductSubcategoryKey = p.ProductSubcategoryKey
JOIN Total_Orders T ON P.ProductKey = T.ProductKey
GROUP BY pc.ProductCategoryKey,
         pc.CategoryName
ORDER BY pc.ProductCategoryKey DESC;

    --3. Retrieve the names of products and their categories for products with selling price greater than the average selling price of all products. - SQ

SELECT ProductName,
       SubcategoryName,
       CategoryName
FROM [ Product Lookup] p
JOIN [Product Subcategories Lookup]psc ON p.ProductSubcategoryKey = psc.ProductSubcategoryKey
JOIN [Product Categories Lookup] pc ON psc.productcategorykey = pc.ProductCategoryKey
WHERE PRODUCTPRICE >
    (SELECT AVG(ProductPrice)
     FROM [ Product Lookup]);

    --4. How many customers have placed orders in “Canada”? List the customer names

SELECT COUNT (DISTINCT t.CustomerKey) AS Canada_Customers
FROM [Customer Lookup] cl
LEFT JOIN Total_Orders t ON cl.CustomerKey = t.CustomerKey
JOIN [Territory Lookup] tl ON t.TerritoryKey = tl.SalesTerritoryKey
WHERE Country = 'Canada' 
  
    --4. How many customers have placed orders in “Canada”? List the customer names
  
  SELECT DISTINCT CustomerKey,
                  CONCAT (Firstname,
                          ' ',
                          Lastname) AS Fullnames
  FROM
    (SELECT cl.CustomerKey AS CustomerKey,
            cl.FirstName,
            cl.LastName,
            t.OrderNumber,
            t.TerritoryKey,
            tl.Country
     FROM [Customer Lookup] cl
     LEFT JOIN Total_Orders t ON cl.CustomerKey = t.CustomerKey
     JOIN [Territory Lookup] tl ON t.TerritoryKey = tl.SalesTerritoryKey
     WHERE Country = 'Canada') AS Canada_Customers;

    --5. Find the 10 products that have been returned the most. How much money was generated by these products?

SELECT SUM(Total_Price) AS Returnedcost
FROM
  (SELECT TOP 10 SUM(pl.ProductPrice * rd.ReturnQuantity) AS Total_Price
   FROM [ Product Lookup] pl
   LEFT JOIN [Returns Data] rd ON pl.ProductKey = rd.ProductKey
   GROUP BY pl.Productname
   ORDER BY COUNT(rd.productkey) DESC) AS Returned_Revenue;

    --6. Get a list of customers who have placed orders in more than one territory.

SELECT cl.CustomerKey,
       FirstName,
       LastName AS Fullname,
       count(DISTINCT tl.SalesTerritoryKey)
FROM Total_Orders t
JOIN [Customer Lookup] cl ON t.CustomerKey = cl.CustomerKey
JOIN [Territory Lookup]tl ON t.TerritoryKey = tl.SalesTerritoryKey
WHERE cl.CustomerKey IS NOT NULL
GROUP BY cl.CustomerKey,
         FirstName,
         LastName
HAVING count(DISTINCT tl.SalesTerritoryKey) > 1
    
    --7. Retrieve the product names and their corresponding sub-categories for products that have been ordered at least 10 times
  
SELECT Productname,
       ps.ProductSubcategoryKey
FROM [ Product Lookup] pl
JOIN [Product Subcategories Lookup] ps ON pl.ProductSubcategoryKey =ps.ProductSubcategoryKey
JOIN Total_Orders t ON T.ProductKey = PL. ProductKey
GROUP BY productname,
         ps.ProductSubcategoryKey
HAVING count(productname) >=10 
  
    --8. List the customer names who have placed orders after 2021. What is the distribution of their occupation?
  
SELECT DISTINCT Firstname,
                lastname,
                orderdate,
                occupation
FROM [Customer Lookup] c
JOIN Total_Orders t ON c.CustomerKey = t.CustomerKey
WHERE YEAR(OrderDate) > 2021
ORDER BY Firstname,
         lastname,
         occupation DESC 
         
    --9. Get a list of products and their corresponding order quantities for products that have been ordered at least once.
  
SELECT ProductName,
       sum(t.OrderQuantity) AS OrderQuantity
FROM [ Product Lookup] p
JOIN Total_Orders t ON t.ProductKey = p.ProductKey
GROUP BY t.OrderQuantity,
         p.productname
HAVING sum(OrderQuantity) >= 1
ORDER BY OrderQuantity DESC
  
     --10. Retrieve the product names that start with the letter "C" or “H” and are from the "Clothing" category.
  
SELECT Productname,
       CategoryName,
       SubcategoryName
FROM [ Product Lookup]pl
JOIN [Product Categories Lookup]pc ON pl.ProductSubcategoryKey = pc.ProductCategoryKey
JOIN [Product Subcategories Lookup]psc ON pc.ProductCategoryKey = psc.ProductCategoryKey
WHERE PL.ProductName LIKE 'C%'
  OR PL.ProductName LIKE 'H%'
  AND PC.CategoryName = 'Clothing' 
  
      --11. Retrieve the product names that have been ordered in the ‘United States’ or 'Australia'.
  
  SELECT DISTINCT tl.*,
                  Productname
  FROM [ Product Lookup] p
  JOIN Total_Orders t ON p.ProductKey = t.ProductKey
  JOIN [Territory Lookup]tl ON t.TerritoryKey = tl.SalesTerritoryKey WHERE tl.Country IN ('United States',
                                                                                          'Australia')
                                                                                          
    --12. Find the customer names who have placed orders with a total amount greater than the average total amount of orders.
  
  SELECT CONCAT (c.Firstname,
                 ' ',
                 c.Lastname) AS Fullname,
                SUM (p.ProductPrice) AS Total_Amount
  FROM [Customer Lookup] c
  JOIN Total_Orders t ON c.CustomerKey = t.CustomerKey
  LEFT JOIN [ Product Lookup] P ON t.ProductKey = p.ProductKey
GROUP BY Firstname,
         Lastname
HAVING SUM(p.Productprice) >
  (SELECT AVG(CustomerTotal)
   FROM
     (SELECT SUM(p.ProductPrice) AS CustomerTotal
      FROM [Customer Lookup] c
      JOIN Total_Orders t ON c.CustomerKey = t.CustomerKey
      JOIN [ Product Lookup] p ON t.ProductKey = p.ProductKey
      GROUP BY c.CustomerKey) AS SUB)
ORDER BY Total_Amount;

    --13. Retrieve the top 5 customers who have placed the highest number of orders, along with their order counts.

SELECT top 5 (CONCAT (c.Firstname,
                      ' ',
                      c.Lastname)) AS Fullname,
           SUM(p.ProductPrice) AS Total_Order_Value,
           count(DISTINCT t.ordernumber) AS Order_Count
FROM [Customer Lookup] c
JOIN Total_Orders t ON c.CustomerKey = t.CustomerKey
JOIN [ Product Lookup] P ON t.ProductKey = p.ProductKey
GROUP BY FirstName,
         Lastname
ORDER BY Order_Count DESC;

    --14. List the customers who have placed orders within the last 6 months (consider the last date in the data)

SELECT C.FIRSTNAME,
       C.LASTNAME,
       T.OrderDate
FROM [Customer Lookup] c
JOIN Total_Orders t ON c.CustomerKey = t.CustomerKey
WHERE ORDERDATE >= DATEADD (MONTH, -6,
                              (SELECT MAX(ORDERDATE) AS '6MONTHS'
                               FROM Total_Orders))
ORDER BY C.FIRSTNAME,
         C.LASTNAME;

    --15. We want to reach out to our best customers in 2022. Can you get emails of the Top 50 customers based on revenue?

SELECT TOP (50) c.EMAILADDRESS,
       Sum(p.productprice) AS Total_Revenue
FROM [Customer Lookup]c
JOIN Total_Orders t ON c.CustomerKey = t.CustomerKey
JOIN [ Product Lookup] p ON t.ProductKey = p.ProductKey
WHERE YEAR(t.OrderDate) = 2022
GROUP BY c.FIRSTNAME,
         c.LASTNAME,
         c.EmailAddress
ORDER BY Total_Revenue DESC;
