-- 1. Retrieve the customers who have placed orders with a total amount greater than $10000
SELECT c.CustomerName, SUM(o.TotalAmount) AS TotalSpent
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
GROUP BY c.CustomerName
HAVING SUM(o.TotalAmount) > 10000;


-- 2. Retrieve the total revenue and total orders generated by each product category
SELECT pc.CategoryName,
       SUM(o.TotalAmount) AS TotalRevenue,
       COUNT(o.OrderID) AS TotalOrders
FROM Orders o
JOIN Products p ON o.ProductID = p.ProductID
JOIN ProductCategories pc ON p.CategoryID = pc.CategoryID
GROUP BY pc.CategoryName;


-- 3. Retrieve products with price greater than the average price (Subquery)
SELECT p.ProductName, pc.CategoryName
FROM Products p
JOIN ProductCategories pc ON p.CategoryID = pc.CategoryID
WHERE p.ProductPrice > (SELECT AVG(ProductPrice) FROM Products);



Added SQL queries for business analysis



-- 4. Customers who placed orders in Canada
SELECT DISTINCT c.CustomerName
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
WHERE o.Country = 'Canada';


-- 5. Top 10 most returned products and their revenue
SELECT TOP 10 p.ProductName, COUNT(r.ReturnID) AS ReturnCount,
       SUM(o.TotalAmount) AS TotalRevenue
FROM Returns r
JOIN Orders o ON r.OrderID = o.OrderID
JOIN Products p ON o.ProductID = p.ProductID
GROUP BY p.ProductName
ORDER BY COUNT(r.ReturnID) DESC;


-- 6. Customers who placed orders in more than one territory
SELECT c.CustomerName, COUNT(DISTINCT o.Territory) AS TerritoriesCount
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
GROUP BY c.CustomerName
HAVING COUNT(DISTINCT o.Territory) > 1;


-- 7. Products ordered at least 10 times (with subcategories)
SELECT p.ProductName, sc.SubcategoryName
FROM OrderDetails od
JOIN Products p ON od.ProductID = p.ProductID
JOIN ProductSubcategories sc ON p.SubcategoryID = sc.SubcategoryID
GROUP BY p.ProductName, sc.SubcategoryName
HAVING COUNT(od.OrderID) >= 10;


-- 8. Customers who placed orders after 2021 + occupation distribution
SELECT c.CustomerName, c.Occupation, COUNT(*) AS OrdersPlaced
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
WHERE YEAR(o.OrderDate) > 2021
GROUP BY c.CustomerName, c.Occupation;


-- 9. Products with order quantities
SELECT p.ProductName, SUM(od.Quantity) AS TotalOrdered
FROM OrderDetails od
JOIN Products p ON od.ProductID = p.ProductID
GROUP BY p.ProductName
HAVING SUM(od.Quantity) > 0;


-- 10. Products starting with C or H from Clothing category
SELECT p.ProductName
FROM Products p
JOIN ProductCategories pc ON p.CategoryID = pc.CategoryID
WHERE pc.CategoryName = 'Clothing'
  AND (p.ProductName LIKE 'C%' OR p.ProductName LIKE 'H%');


-- 11. Products ordered in United States or Australia
SELECT DISTINCT p.ProductName
FROM Orders o
JOIN Products p ON o.ProductID = p.ProductID
WHERE o.Country IN ('United States', 'Australia');


-- 12. Customers with order total greater than avg total order (Subquery)
SELECT c.CustomerName, SUM(o.TotalAmount) AS TotalSpent
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
GROUP BY c.CustomerName
HAVING SUM(o.TotalAmount) > (
    SELECT AVG(TotalAmount) FROM Orders
);


-- 13. Top 5 customers with most orders
SELECT TOP 5 c.CustomerName, COUNT(o.OrderID) AS OrderCount
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
GROUP BY c.CustomerName
ORDER BY COUNT(o.OrderID) DESC;


-- 14. Customers who placed orders within last 6 months
SELECT DISTINCT c.CustomerName
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
WHERE o.OrderDate >= DATEADD(MONTH, -6, (SELECT MAX(OrderDate) FROM Orders));


-- 15. Emails of Top 50 customers by revenue in 2022
SELECT TOP 50 c.CustomerName, c.Email, SUM(o.TotalAmount) AS TotalRevenue
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
WHERE YEAR(o.OrderDate) = 2022
GROUP BY c.CustomerName, c.Email
ORDER BY SUM(o.TotalAmount) DESC;

